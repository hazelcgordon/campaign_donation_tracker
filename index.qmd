---
title: ""
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r libraries, warning=FALSE, include=FALSE}

library(tidyverse)
library(ggplot2)
library(plotly)
library(lubridate)
library(scales)

```

## Donations: Q1 2024 period

```{r include=FALSE}

raw <- read.csv("jan_may_2024.csv")

#select relevant variables, extract month out of date

q1 <- raw %>%
  select(RegulatedEntityName, RegulatedEntityType, RegulatedDoneeType, Value, ReceivedDate, DonorStatus, AccountingUnitName, NatureOfDonation, DonationType) %>%
  mutate(Date = as.Date(ReceivedDate, format = "%d/%m/%Y")) %>%
  mutate(Month = floor_date(Date, "month")) %>%
  mutate(MonthName = format(Month, "%B"))

#factor level as months

q1$MonthName <- factor(q1$MonthName, levels = c("January", "February", "March", "April"))

# Remove £ sign and convert to numeric
q1$Value <- as.numeric(gsub("[£,\"]", "", q1$Value))
  
```

### What's been happening between Jan and May, who's been donating (by donor type)?

This includes the recently released donations for Q1, but also any donation that been registered with the EC so far for this year. Full figures not released for April/May period yet.

```{r include=FALSE}

#getting the dataframe for the donor type plot over time

donortype_plot <- q1 %>%
  select(MonthName, DonorStatus, Value) %>%
  group_by(MonthName, DonorStatus) %>%
  summarise(TotalValue = sum(Value, na.rm = TRUE), .groups = 'drop') %>%
  pivot_wider(names_from = DonorStatus, values_from = TotalValue)

# convert NA's to 0 and round values to 0 d.p.

donortype_plot <- donortype_plot %>%
  mutate_all(~replace(., is.na(.), 0)) %>%
  mutate(across(where(is.numeric), ~round(., 0)))

# factor levels for months

donortype_plot$MonthName <- factor(donortype_plot$MonthName, levels = c("January", "February", "March", "April"))

```

```{r echo=FALSE}

# Custom hover text with currency formatting
donortype_plot <- donortype_plot %>%
  mutate(
    PoliticalParty_text = paste("Registered Political Party: £", comma(`Registered Political Party`)),
    Company_text = paste("Company: £", comma(`Company`)),
    Individual_text = paste("Individual: £", comma(`Individual`)),
    FriendlySociety_text = paste("Friendly Society: £", comma(`Friendly Society`)),
    ImpermissibleDonor_text = paste("Impermissible Donor: £", comma(`Impermissible Donor`)),
    LLP_text = paste("Limited Liability Partnership: £", comma(`Limited Liability Partnership`)),
    PublicFund_text = paste("Public Fund: £", comma(`Public Fund`)),
    TradeUnion_text = paste("Trade Union: £", comma(`Trade Union`)),
    Trust_text = paste("Trust: £", comma(`Trust`)),
    Unincorporated_text = paste("Unincorporated Association: £", comma(`Unincorporated Association`))
  )

type_plot <- plot_ly(donortype_plot, x = ~MonthName) %>%
  add_lines(y = ~`Registered Political Party`, name = 'Registered Political Party', text = ~PoliticalParty_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Company`, name = 'Company', text = ~Company_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Individual`, name = 'Individual', text = ~Individual_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Trade Union`, name = 'Trade Union', text = ~TradeUnion_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Friendly Society`, name = 'Friendly Society', text = ~FriendlySociety_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Limited Liability Partnership`, name = 'Limited Liability Partnership', text = ~LLP_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Public Fund`, name = 'Public Fund', text = ~PublicFund_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Trust`, name = 'Trust', text = ~Trust_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Impermissible Donor`, name = 'Impermissible Donor', text = ~ImpermissibleDonor_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Unincorporated Association`, name = 'Unincorporated Association', text = ~Unincorporated_text, hoverinfo = 'text') %>%
  layout(
    xaxis = list(title = ''),
    yaxis = list(title = 'Total Value Donated'),
    hovermode = 'closest' 
  )

type_plot

```

### What kind of donee's have recieved the most money over this period?

```{r include=FALSE}

#switching the empty donee status's to political parties

q1 <- q1 %>%
  mutate(RegulatedDoneeType = if_else(RegulatedDoneeType == "", "Political Party", RegulatedDoneeType))
         
#getting the dataframe for the donee plot over time

doneetype_plot <- q1 %>%
  select(MonthName, RegulatedDoneeType, Value) %>%
  group_by(MonthName, RegulatedDoneeType) %>%
  summarise(TotalValue = sum(Value, na.rm = TRUE), .groups = 'drop') %>%
  pivot_wider(names_from = RegulatedDoneeType, values_from = TotalValue)

# convert NA's to 0 and round values to 0 d.p.

doneetype_plot <- doneetype_plot %>%
  mutate_all(~replace(., is.na(.), 0)) %>%
  mutate(across(where(is.numeric), ~round(., 0)))

```

```{r echo=FALSE}

# Custom hover text with currency formatting
doneetype_plot <- doneetype_plot %>%
  mutate(
    PoliticalParty_text = paste("Political Party: £", comma(`Political Party`)),
    MP_text = paste("MP: £", comma(`MP - Member of Parliament`)),
    MA_text = paste("Members Association: £", comma(`Members Association`)),
    Mayor_text = paste("Mayor: £", comma(`Mayor`)),
    Senedd_text = paste("Senedd Member: £", comma(`Senedd Member`))
  )

donee_plot <- plot_ly(doneetype_plot, x = ~MonthName) %>%
  add_lines(y = ~`Political Party`, name = 'Political Party', text = ~PoliticalParty_text, hoverinfo = 'text') %>%
  add_lines(y = ~`MP - Member of Parliament`, name = 'MP', text = ~MP_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Mayor`, name = 'Mayor', text = ~Mayor_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Members Association`, name = 'Members Association', text = ~MA_text, hoverinfo = 'text') %>%
  add_lines(y = ~`Senedd Member`, name = 'Senedd Member', text = ~Senedd_text, hoverinfo = 'text') %>%
  layout(
    xaxis = list(title = ''),
    yaxis = list(title = 'Total Value Donated'),
    hovermode = 'closest' 
  )

donee_plot

```



```{r associatied political party, include=FALSE}

#creating a new column for associated political party

labour_names <- c("Andy Burnham", "Steve Rotheram", "Wes Streeting", "Labour To Win", "Dan Jarvis MP", "Labour Together", "Labour Campaign For Electoral Reform", "Michael Shanks", "Ms Kim Leadbeater", "Emma Hardy", "Kim McGuinness", "Rachel Reeves MP", "The Rt Hon David Lammy MP", "Dr Olivia Blake", "Mr Grahame Morris MP", "Ms Diana Ruth Johnson MP", "Mr Navendu Mishra", "Andrew Western", "Sharon Hodgson MP", "Mr Damien Egan", "Mr Steve McCabe", "Ruth Jones", "Anna McMorrin", "Labour Party", "Co-operative Party", "Dan Carden", "Jeremy Miles", "Marsha De Cordova", "Mr Dan Norris", "Mr Jonathan Reynolds MP", "Mr Vaughan Gething", "Ms Bridget Phillipson MP", "Ms Yasmin Qureshi MP", "Peter Kyle MP", "Rachel Reeves MP", "Ruth Jones", "Sam Tarry", "Shabana Mahmood MP", "The Rt Hon Yvette Cooper MP", "Wes Streeting")

conservative_names <- c("Carlton Club Political Committee", "Mr Jonathan Gullis", "Simon Hart MP", "The Rt Hon Dr Liam Fox MP", "Alan Mak MP", "Mr Darren Millar", "Samuel Rowlands", "Russell George", "Simon Clarke", "Ms Caroline Nokes", "Suella Braverman", "Mr Steve Barclay", "Mr Nicholas John Gibb MP", "Mr Alun Cairns MP", "Mr Bim Afolami", "Lucy Frazer MP", "Mr Andy Street", "David Simmonds", "New Conservatives Ltd", "Conservative and Unionist Party", "Association of Conservative Peers (ACP)", "Gagan Mohindra", "Gareth Davies", "Gavin Williamson", "Johnny Mercer MP", "Kemi Badenoch", "Lia Nici", "Mr Andrew Griffiths MP", "Mr Ben Houchen", "Mr Brandon Lewis MP", "Mr Jake Berry MP", "Mr John Stevenson MP", "Mr Jonathan Gullis", "Mr Michael Gove MP", "Mrs Laura Trott", "Ms Jo Gideon", "Ms Virginia Crosbie", "Shaun Bailey", "Suzanne Webb", "The Rt Hon David Mundell MP")

libdem_names <- c("Mr Tim Farron MP", "Liberal Democrats")

reform_names <- c("Reform UK")

sf_names <- c("Sinn Féin")

alliance_names <- c("Alliance - Alliance Party of Northern Ireland")

sdlp_names <- c("SDLP (Social Democratic & Labour Party)")

ulster_names <- c("Ulster Unionist Party")

SNP_names <- c("Scottish National Party (SNP)", "Mr Martyn Day MP")

DUP_names <- c("Jim Shannon")

plaid_names <- c("Plaid Cymru - The Party of Wales")

green_names <- c("Green Party")

other_party_names <- c("Animal Welfare Party", "Social Democratic Party", "The Reclaim Party", "The Socialist Party of Great Britain", "True & Fair Party")

third_party_names <- c("Best for Britain Limited", "Make Votes Matter")

#mapping political party associations onto names

q1 <- q1 %>%
  mutate(PartyAffiliation = case_when(
    RegulatedEntityName %in% labour_names ~ "Labour",
    RegulatedEntityName %in% conservative_names ~ "Conservative",
    RegulatedEntityName %in% libdem_names ~ "Lib Dem",
    RegulatedEntityName %in% reform_names ~ "Reform UK",
    RegulatedEntityName %in% sf_names ~ "Sinn Féin",
    RegulatedEntityName %in% alliance_names ~ "Alliance",
    RegulatedEntityName %in% sdlp_names ~ "SDLP",
    RegulatedEntityName %in% ulster_names ~ "Ulster Unionist Party",
    RegulatedEntityName %in% SNP_names ~ "SNP",
    RegulatedEntityName %in% plaid_names ~ "Plaid Cymru",
    RegulatedEntityName %in% green_names ~ "Greens",
    RegulatedEntityName %in% DUP_names ~ "DUP",
    RegulatedEntityName %in% third_party_names ~ "Non-Party",
    RegulatedEntityName %in% other_party_names ~ "Other",
    TRUE ~ NA_character_  # Default to NA if no match
  ))

#re-order columns 

q1 <- q1 %>%
  select(RegulatedEntityName, RegulatedEntityType, RegulatedDoneeType, PartyAffiliation, Value, ReceivedDate, MonthName, DonorStatus, AccountingUnitName)

```

### How much money did each party get between Jan and May, and from what types of donors?

This graph combines individual MPs, mayors and members associations by their associated political party. 

```{r echo=FALSE, warning=FALSE, fig.align='center'}

#set factor levels

q1$PartyAffiliation <- factor(q1$PartyAffiliation, levels = c("Conservative", "Labour", "Lib Dem", "Reform UK", "Greens", "SNP", "Plaid Cymru", "DUP", "Alliance", "Sinn Féin", "SDLP", "Ulster Unionist Party", "Non-Party", "Other"))

q1$DonorStatus <- factor(q1$DonorStatus, levels = c("Registered Political Party", "Trade Union", "Company", "Individual", "Public Fund", "Trust", "Unincorporated Association", "Limited Liability Partnership", "Friendly Society", "Impermissible Donor"))

# Create a complete data frame with all combinations of DonorStatus and PartyAffiliation
complete_data <- expand.grid(PartyAffiliation = 
                              levels(q1$PartyAffiliation), 
                             DonorStatus = unique(q1$DonorStatus)
                             )

#create summary

donorstatus_summary <- q1 %>%
  group_by(PartyAffiliation, DonorStatus) %>%
  summarize(TotalValue = sum(Value, na.rm = TRUE), .groups = 'drop') %>%
  right_join(complete_data, by = c("PartyAffiliation", "DonorStatus")) %>%
  replace_na(list(TotalValue = 0))

# Add a formatted value column for hover text
donorstatus_summary <- donorstatus_summary %>%
  mutate(HoverText = paste0("Total Value: £", format(TotalValue, big.mark = ",", scientific = FALSE), "<br>",
                            "Donor Status: ", DonorStatus, "<br>",
                            "Party Affiliation: ", PartyAffiliation))

#custom colours

custom_colors <- c("Registered Political Party" = "#1f78b4", "Trade Union" = "#e31a1c", "Company" = "#ff7f00", "Individual" = "#6a3d9a", "Unincorporated Association" = "#b2df8a", "Trust" = "#FFD700", "Friendly Society" = "sienna", "Limited Liability Partnership" = "#2ca02c", "Impermissible Donor" = "#e377c2", "Public Fund" = "#7f7f7f")

# Create the base plot
donorstatus_p <- ggplot(donorstatus_summary, aes(x = PartyAffiliation, y = TotalValue, fill = DonorStatus, text = HoverText)) +
  geom_bar(stat = "identity", position = position_dodge2(preserve = "single"), width = 0.7) +
  scale_y_continuous(labels = scales::dollar_format(prefix = "£")) +
  scale_fill_manual(values = custom_colors) +
  labs(title = "",
       x = "",
       y = "") +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.margin = margin(t = 10),
        legend.key.size = unit(0.5, "lines"),
        axis.text.x = element_text(angle = 45, hjust = 1))

#changing the hover info

donorstatus_int <- ggplotly(donorstatus_p, tooltip = c("text"))

#customisation

donorstatus_int <- donorstatus_int %>%
  layout(
    xaxis = list(
      tickangle = -45  # Rotate x-axis text in plotly
    ),
    legend = list(
      title = list(text = NULL),  # Remove the legend title
      orientation = "h",          # Horizontal legend
      x = 0.5,                    # Centered horizontally
      xanchor = "center",         # Center the legend
      y = -0.2,                   # Position below the plot
      yanchor = "top",            # Align to the top
      font = list(size = 10),     # Adjust legend font size
      itemwidth = 30              # Adjust the width of legend items
    ),
       annotations = list(
      x = 1,                      # Position on the right
      y = 1,                   # Position below the legend
      text = "Source: Electoral Commission 2024 Donations Data",  
      showarrow = FALSE,          # No arrow
      xref = 'paper',             # Relative to the plotting area
      yref = 'paper',             # Relative to the plotting area
      xanchor = 'right',          # Align text to the right
      yanchor = 'top',           # Automatic vertical alignment
      font = list(size = 10)      # Adjust annotation font size
    )
  )


donorstatus_int

```


```{r include=FALSE}

#set factor level

q1$RegulatedDoneeType <- factor(q1$RegulatedDoneeType, levels = c("Political Party", "MP - Member of Parliament", "Mayor", "Members Association", "Senedd Member"))


# Create a complete data frame with all combinations of Donortype and PartyAffiliation
complete_data <- expand.grid(PartyAffiliation = 
                              levels(q1$PartyAffiliation), 
                             RegulatedDoneeType = 
                               unique(q1$RegulatedDoneeType)
                             )

#create summary

doneetype_summary <- q1 %>%
  group_by(PartyAffiliation, RegulatedDoneeType) %>%
  summarise(TotalValue = sum(Value, na.rm = TRUE), .groups = 'drop') %>%
  right_join(complete_data, by = c("PartyAffiliation", 
                                   "RegulatedDoneeType")) %>%
  replace_na(list(TotalValue = 0))

# Add a formatted value column for hover text
doneetype_summary <- doneetype_summary %>%
  mutate(HoverText = paste0("Total Value: £", format(TotalValue, big.mark = ",", scientific = FALSE), "<br>",
                            "Donee Type: ", RegulatedDoneeType, "<br>",
                            "Party Affiliation: ", PartyAffiliation))

#custom colours

type_colors <- c("MP - Member of Parliament" = "#1f78b4", "Mayor" = "#6a3d9a", "Members Association" = "#ff7f00", "Senedd Member" = "#b2df8a", "Political Party" = "#e377c2")

# Create the base plot
doneetype_p <- ggplot(doneetype_summary, aes(x = PartyAffiliation, y = TotalValue, fill = RegulatedDoneeType, text = HoverText)) +
  geom_bar(stat = "identity", position = position_dodge2(preserve = "single"), width = 0.7) +
  scale_y_continuous(labels = scales::dollar_format(prefix = "£")) +
  scale_fill_manual(values = type_colors) +
  labs(title = "",
       x = "",
       y = "") +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 8),
        legend.margin = margin(t = 10),
        legend.key.size = unit(0.5, "lines"),
        axis.text.x = element_text(angle = 45, hjust = 1))

#changing the hover info

doneetype_int <- ggplotly(doneetype_p, tooltip = c("text"))

#customisation

doneetype_int <- doneetype_int %>%
  layout(
    xaxis = list(
      tickangle = -45  # Rotate x-axis text in plotly
    ),
    legend = list(
      title = list(text = NULL),  # Remove the legend title
      orientation = "h",          # Horizontal legend
      x = 0.5,                    # Centered horizontally
      xanchor = "center",         # Center the legend
      y = -0.2,                   # Position below the plot
      yanchor = "top",            # Align to the top
      font = list(size = 10),     # Adjust legend font size
      itemwidth = 30              # Adjust the width of legend items
    ),
       annotations = list(
      x = 1,                      # Position on the right
      y = 1,                   # Position below the legend
      text = "Source: Electoral Commission 2024 Donations Data",  
      showarrow = FALSE,          # No arrow
      xref = 'paper',             # Relative to the plotting area
      yref = 'paper',             # Relative to the plotting area
      xanchor = 'right',          # Align text to the right
      yanchor = 'top',           # Automatic vertical alignment
      font = list(size = 10)      # Adjust annotation font size
    )
  )


doneetype_int


```

### Was the purpose of the donation disclosed?

I'm not sure what the requirements are on this for donors - but this one basically shows what % of donors didn't disclose the purpose of their donation (by donor type), so it says something interesting about the level of transparency behind these things.

```{r echo=FALSE}

q1 <- raw %>%
  select(RegulatedEntityName, RegulatedEntityType, RegulatedDoneeType, Value, ReceivedDate, DonorStatus, AccountingUnitName, NatureOfDonation, DonationType) %>%
  mutate(Date = as.Date(ReceivedDate, format = "%d/%m/%Y")) %>%
  mutate(Month = floor_date(Date, "month")) %>%
  mutate(MonthName = format(Month, "%B"))

#factor level as months

q1$MonthName <- factor(q1$MonthName, levels = c("January", "February", "March", "April"))

# Remove £ sign and convert to numeric
q1$Value <- as.numeric(gsub("[£,\"]", "", q1$Value))

# Iterate over the rows and update NatureOfDonation based on DonationType
for (i in 1:nrow(q1)) {
  if (q1$DonationType[i] == "Visit") {
    q1$NatureOfDonation[i] <- "Visit"
  }
}

#fill empty cells with 'undisclosed'

for (i in 1:nrow(q1)) {
  if (q1$NatureOfDonation[i] == "") {
    q1$NatureOfDonation[i] <- "Undisclosed"
  }
}

#set factor levels

q1$NatureOfDonation <- factor(q1$NatureOfDonation, levels = c("Undisclosed", "Staff costs", "Administration services", "Consultancy services", "Visit", "Advertising", "Sponsorship", "Auction prizes", "Cranborne Money (House of Lords)", "Travel", "Hospitality", "Short Money (House of Commons)", "Assistance for Parties (Scottish Parliament)", "Financial Assistance for Parties in NI Assembly", "Premises", "Other Payment", "Other"))

#group donor status by disclosure of purpose

donor_status_percent <- q1 %>%
  group_by(DonorStatus, NatureOfDonation) %>%
  summarise(Count = n(), .groups = 'drop') %>%
  group_by(DonorStatus) %>%
  mutate(Percentage = Count / sum(Count) * 100) %>%
  ungroup()

#altering display of x-axis labels

donor_status_percent <- donor_status_percent %>%
  mutate(DonorStatus = case_when(
    DonorStatus == "Unincorporated Association" ~ "Unincorporated\n Association",
    TRUE ~ DonorStatus
  ))

donor_status_percent <- donor_status_percent %>%
  mutate(DonorStatus = case_when(
    DonorStatus == "Registered Political Party" ~ "Registered\n Political Party",
    TRUE ~ DonorStatus
  ))

donor_status_percent <- donor_status_percent %>%
  mutate(DonorStatus = case_when(
    DonorStatus == "Limited Liability Partnership" ~ "Limited Liability\n Partnership",
    TRUE ~ DonorStatus
  ))

#re-order factor

donor_status_percent <- donor_status_percent %>%
  mutate(DonorStatus = factor(DonorStatus, levels = c("Registered\n Political Party", "Trade Union", "Company", "Individual", "Unincorporated\n Association", "Friendly Society", "Public Fund", "Limited Liability\n Partnership", "Trust", "Impermissible Donor")))

# Add a formatted value column for hover text
donor_status_percent <- donor_status_percent %>%
  mutate(HoverText = paste0("Total Frequency: ", format(Count), "<br>",
                            "Percentage: ", sprintf("%.1f", Percentage), 
                            "<br>",
                            "Nature of Donation: ", NatureOfDonation))

#create a stacked bar chart plot

status_colors <- c(
  "Undisclosed" = "#1f78b4",
  "Staff costs" = "#6a3d9a",
  "Administration services" = "#ff7f00",
  "Consultancy services" = "#b2df8a",
  "Visit" = "lightyellow",
  "Advertising" = "#e31a1c",
  "Sponsorship" = "#a6cee3",
  "Auction prizes" = "#b15928",
  "Cranborne Money (House of Lords)" = "#33a02c",
  "Travel" = "#fb9a99",
  "Hospitality" = "#cab2d6",
  "Short Money (House of Commons)" = "#fdbf6f",
  "Assistance for Parties (Scottish Parliament)" = "#ff33cc",
  "Financial Assistance for Parties in NI Assembly" = "#b2df8a",
  "Premises" = "#a1d99b",
  "Other Payment" = "#1f78b4",
  "Other" = "#ffff99"
)

nature_p <- ggplot(donor_status_percent, aes(x = DonorStatus, y = Percentage, fill = NatureOfDonation, text = HoverText)) +
  geom_bar(stat = "identity", position = "fill") +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_manual(values = status_colors) +
  labs(title = "",
       x = "",
       y = "",
       fill = "") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

#interactive plot

nature_int <- ggplotly(nature_p, tooltip = c("text"))

#customisation

nature_int <- nature_int %>%
  layout(
    legend = list(
      title = list(text = NULL),  # Remove the legend title
      orientation = "v",          # Vertical legend
      x = 1.02,                   
      xanchor = "left",           # Align to the left
      y = 0.5,                    # Center vertically
      yanchor = "middle",         # Align to the middle
      font = list(size = 10),     # Adjust legend font size
      itemwidth = 30),
    margin = list(r = 120),       
    annotations = list(
      list(
        x = 1,                      # Position on the right
        y = -0.3,                   # Position below the legend
        text = "Source: Electoral Commission 2024 Donations Data",  
        showarrow = FALSE,          # No arrow
        xref = 'paper',             # Relative to the plotting area
        yref = 'paper',             # Relative to the plotting area
        xanchor = 'right',          # Align text to the right
        yanchor = 'auto',           # Automatic vertical alignment
        font = list(size = 10)      # Adjust annotation font size
      )
    )
  )

nature_int

```

